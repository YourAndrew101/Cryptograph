<Window x:Class="CryptographWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        Title="MainWindow" Height="450" Width="850">
    <Window.Resources>
        <SolidColorBrush x:Key="Grid.Static.Background" Color="#343d46"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#4f5b66"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#000000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#65737e"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#6F7D88"/>

        <SolidColorBrush x:Key="InputTextBox.Static.Background" Color="#2A333C"/>
        <SolidColorBrush x:Key="InputTextBox.Static.Foreground" Color="#E9E9CF"/>

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#4f5b66"/>
        <SolidColorBrush x:Key="ListBox.Static.Foreground" Color="#000000"/>


        <Style x:Key="MainGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource Grid.Static.Background}"/>
        </Style>

        <Style x:Key="SideMenuButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
            <Setter Property="Background" Value="{StaticResource InputTextBox.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource InputTextBox.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
            <Setter Property="TextDecorations" Value="Underline"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InputTextBox" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                </Style>
                <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="MinWidth" Value="10"/>
            <Style.BasedOn>
                <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
            </Style.BasedOn>
        </Style>

        <Style x:Key="OutputTextBox" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="MinWidth" Value="10"/>
            <Style.BasedOn>
                <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
            </Style.BasedOn>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>


    <Grid x:Name="MainGrid" Style="{DynamicResource MainGridStyle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*">
            </ColumnDefinition>
            <ColumnDefinition Width="54*"></ColumnDefinition>
            <ColumnDefinition Width="42*"></ColumnDefinition>
            <ColumnDefinition Width="54*"></ColumnDefinition>
            <ColumnDefinition Width="9*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="95*"></RowDefinition>
            <RowDefinition Height="60*"></RowDefinition>
            <RowDefinition Height="83*"/>
            <RowDefinition Height="58*"></RowDefinition>
            <RowDefinition Height="127*"></RowDefinition>
        </Grid.RowDefinitions>

        <Button 
            x:Name="SideMenuButton" 
            Grid.Row="0" 
            Grid.Column="0"
            BorderThickness="0"
            Margin="5,9,0,41.667" 
            Style="{DynamicResource SideMenuButton}">
            <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="34" Text="&#xE700;"></TextBlock>
        </Button>

        <TextBox x:Name="InputTextBox"
                 Text="Введіть ваш текст..."
                 Height="305"  
                 Width="270"
                 Margin="2,0.333,0,0" 
                 Grid.Row="1"
                 Grid.RowSpan="4"                            
                 Grid.Column="1" 
                 Grid.ColumnSpan="2"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 Style="{DynamicResource InputTextBox}"
                 TextWrapping="Wrap"
                 AcceptsReturn="True"
                 GotFocus="InputTextBox_GotFocus" 
                 LostFocus="InputTextBox_LostFocus">
        </TextBox>
        <TextBox x:Name="OutputTextBox"                  
                 Height="305"
                 Width="270"
                 Margin="1,0.333,0,0"
                 Grid.Column="3"
                 Grid.ColumnSpan="2"  
                 Grid.Row="1" 
                 Grid.RowSpan="4" 
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"             
                 Style="{DynamicResource OutputTextBox}"         
                 TextWrapping="Wrap"
                 AcceptsReturn="True">
        </TextBox>

        <ComboBox x:Name="EncryptionsComboBox"
                  Grid.Column="2"
                  Grid.Row="1"
                  Margin="30,9.333,30,0"     
                  VerticalAlignment="Top" Height="22">
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>ROT1</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>ROT13</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Шифр Цезаря</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Транспозиція</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Двійковий код</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Вісімковий код</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Шістнадцятковий код</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Шифр Віженера</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>RSA шифрування</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>AES шифрування</TextBlock>
                </StackPanel>
            </ComboBoxItem>
        </ComboBox>
        <RadioButton x:Name="CryptoRadioButton"
                     Content="Шифрувати"
                     FontSize="16"
                     Grid.Column="2"
                     Grid.Row="2" 
                     Margin="30,10.333,0,0"   
                     HorizontalAlignment="Left"                                  
                     VerticalAlignment="Top" Height="20" Width="105" />
        <RadioButton x:Name="DecryptoRadioButton"
                     Content="Розшифрувати"
                     FontSize="16"
                     Grid.Column="2"
                     Grid.Row="2" 
                     Margin="30,43.333,0,0"   
                     HorizontalAlignment="Left"                                  
                     VerticalAlignment="Top" Height="20" Width="127"/>
        <Button x:Name="ActionButton"
                Height="29"                
                Grid.Column="2"
                Grid.Row="3"
                Margin="30,18.667,30,0"              
                VerticalAlignment="Top"
                />
    </Grid>


</Window>
